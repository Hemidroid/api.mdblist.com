FORMAT: 1A
HOST: https://api.mdblist.com

# MDBList API

API service allows you to access information about ratings, votes, streaming services and more

## API Keys

API key can be generated for free in mdblist.com preferences

## Pagination

Some methods support pagination ðŸ“„  
Append a query string like ?limit=`limit`&offset=`offset` to the URL to influence the results.

| Parameter | Type | Value |
| --------- | ---- | ----- |
| `limit` | integer  | Number of results to return |
| `offset` | integer  | Number of results to skip from the beginning  |


## My Limits [/user/{?apikey}]

Show information about user limits

+ Parameters
    + apikey: abc123 (string, required) - Your API key.
    
### Get My Limits [GET]

+ Response 200 (application/json)

        {
          "limits": {
            "supporter": true,
            "rating_ids": 100,
            "api_requests": 25000
          }
        }
        
## My Lists [/lists/user/{?apikey}]
Fetches users lists.

+ Parameters
    + apikey: abc123 (string, required) - Your API key.

### Get My Lists [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 13,
                    "name": "Top Watched Movies of The Week for KiDS",
                    "slug": "top-watched-movies-of-the-week-for-kids",
                    "description": "",
                    "mediatype": "movie",
                    "items": 12,
                    "likes": 50
                },
                {
                    "id": 14,
                    "name": "Top Watched Movies of The Week / >60",
                    "slug": "top-watched-movies-of-the-week",
                    "description": "",
                    "mediatype": "movie",
                    "items": 75,
                    "likes": 247
                },
                {
                    "id": 69,
                    "name": "IMDb Moviemeter (Top 100)",
                    "slug": "imdb-moviemeter-top-100",
                    "description": "",
                    "mediatype": "movie",
                    "items": 100,
                    "likes": 57
                }
            ]

## User Lists [/lists/user/{userid}/{?apikey}]
Fetches users lists by `userid`.

+ Parameters
    + userid: 3 (int, required) - User ID.
    + apikey: abc123 (string, required) - Your API key.

### Get User Lists [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 13,
                    "name": "Top Watched Movies of The Week for KiDS",
                    "slug": "top-watched-movies-of-the-week-for-kids",
                    "description": "",
                    "mediatype": "movie",
                    "items": 12,
                    "likes": 50
                },
                {
                    "id": 14,
                    "name": "Top Watched Movies of The Week / >60",
                    "slug": "top-watched-movies-of-the-week",
                    "description": "",
                    "mediatype": "movie",
                    "items": 75,
                    "likes": 247
                },
                {
                    "id": 69,
                    "name": "IMDb Moviemeter (Top 100)",
                    "slug": "imdb-moviemeter-top-100",
                    "description": "",
                    "mediatype": "movie",
                    "items": 100,
                    "likes": 57
                }
            ]

## List by id [/lists/{listid}{?apikey}]
Fetches information about a list by `listid`.

+ Parameters
    + listid: 1176 (number, required) - The ID of the list.
    + apikey: abc123 (string, required) - Your API key.

### Get List by ID [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 1176,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "movie",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                }
            ]

## List by name [/lists/{username}/{listname}{?apikey}]
Fetches information about a list by `username` and `listname`. Can return multiple lists, since list can contain separate filter for movies and shows.

+ Parameters
    + username: linaspurinis (string, required) - The username associated with the list.
    + listname: `latest-certified-fresh-releases` (string, required) - The slug of the list.
    + apikey: abc123 (string, required) - Your API key.

### Get List by Name [GET]

+ Response 200 (application/json)
    + Body

            [       
                {
                    "id": 1176,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "movie",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                },
                {
                    "id": 6365,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "show",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                }
            ]


## List items [/lists/{listid}/items{?apikey}]

Fetches list items.

+ Parameters
    + listid: 1176 (number, required) - The ID of the list.
    + apikey: abc123 (string, required) - Your API key.

### Get List Items [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 917496,
                    "rank": 1,
                    "adult": 0,
                    "title": "Beetlejuice Beetlejuice",
                    "imdb_id": "tt2049403",
                    "tvdb_id": null,
                    "language": "en",
                    "mediatype": "movie",
                    "release_year": 2024,
                    "spoken_language": "en"
                },
                {
                    "id": 646097,
                    "rank": 2,
                    "adult": 0,
                    "title": "Rebel Ridge",
                    "imdb_id": "tt11301886",
                    "tvdb_id": null,
                    "language": "en",
                    "mediatype": "movie",
                    "release_year": 2024,
                    "spoken_language": "en"
                },
                {
                    "id": 1125073,
                    "rank": 3,
                    "adult": 0,
                    "title": "Between the Temples",
                    "imdb_id": "tt27722375",
                    "tvdb_id": null,
                    "language": "en",
                    "mediatype": "movie",
                    "release_year": 2024,
                    "spoken_language": "en"
                },
                {
                    "id": 1029281,
                    "rank": 4,
                    "adult": 0,
                    "title": "Strange Darling",
                    "imdb_id": "tt22375054",
                    "tvdb_id": null,
                    "language": "en",
                    "mediatype": "movie",
                    "release_year": 2024,
                    "spoken_language": "en"
                }
            ]
            
## Media Info [/{media_provider}/{media_id}/{media_type}{?apikey,append_to_response}]

Get informtion about Movie or Show

+ Parameters
    + media_provider: `imdb` (enum[string], required) - Media provider
        + Members
            + `tmdb`
            + `imdb`
            + `trakt`
            + `tmdb`
            + `tvdb`
            + `anidb`
    + media_id: tt0073195 (string, required) - Media ID
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
            + `any`
    + append_to_response: `keyword` (string, optional) - Additional information to append. Accepts a comma-separated list of the following values: `keyword`, `review`
        + Members
            + `keyword` - Append keyword information.
            + `review` - Append review information.


    + apikey: abc123 (string, required) - Your API key.

### Get Summary [GET]

+ Response 200 (application/json)
        
            {
            "title": "Jaws",
            "year": 1975,
            "released": "1975-06-20",
            "released_digital": "1997-11-01",
            "description": "When the seaside community of Amity finds itself under attack by a dangerous great white shark, the town's chief of police, a young marine biologist, and a grizzled hunter embark on a desperate quest to destroy the beast before it strikes again.",
            "runtime": 124,
            "score": 86,
            "score_average": 86,
            "imdbid": "tt0073195",
            "traktid": 457,
            "tmdbid": 578,
            "type": "movie",
            "ratings": [
            {
            "source": "imdb",
            "value": 8.1,
            "score": 81,
            "votes": 673215,
            "url": 99
            },
            {
            "source": "metacritic",
            "value": 87,
            "score": 87,
            "votes": 21,
            "url": "/jaws"
            },
            {
            "source": "metacriticuser",
            "value": null,
            "score": null,
            "votes": null,
            "url": null
            },
            {
            "source": "trakt",
            "value": 78,
            "score": 78,
            "votes": 14033,
            "url": null
            },
            {
            "source": "tomatoes",
            "value": 97,
            "score": 97,
            "votes": 102,
            "url": "/m/jaws"
            },
            {
            "source": "tmdb",
            "value": 76,
            "score": 76,
            "votes": 10114,
            "url": null
            },
            {
            "source": "letterboxd",
            "value": 8,
            "score": 80,
            "votes": 876082,
            "url": "/film/jaws/"
            },
            {
            "source": "rogerebert",
            "value": 4,
            "score": "great-movie-jaws-1975",
            "votes": null,
            "url": null
            },
            {
            "source": "myanimelist",
            "value": null,
            "score": null,
            "votes": null,
            "url": null
            }
            ],
            "streams": [
            {
            "id": 9,
            "name": "fuboTV"
            },
            {
            "id": 10,
            "name": "AMC"
            }
            ],
            "watch_providers": [
            {
            "id": 8,
            "name": "Netflix"
            },
            {
            "id": 1796,
            "name": "Netflix basic with Ads"
            }
            ],
            "language": "en",
            "spoken_language": "en",
            "country": "us",
            "certification": "PG",
            "commonsense": true,
            "age_rating": 13,
            "status": "released",
            "trailer": "https://youtube.com/watch?v=WKuZJjPSLXQ",
            "poster": "https://image.tmdb.org/t/p/original/lxM6kqilAdpdhqUl2biYp5frUxE.jpg",
            "backdrop": "https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/3nYlM34QhzdtAvWRV5bN4nLtnTc.jpg",
            "response": true
            }

## Search for Media [/search/{media_type}{?apikey,query,limit_by_score,sort_by_score,year,limit}]

Search for Movie or Show

+ Parameters
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
            + `any`
    + query: Jaws (string, required) - Search Query
    + limit_by_score: 30 (int, optional) - Limit returned results by score
    + sort_by_score: True (Boolean, optional) - Sort returned results by score
    + year: 1976 (int, optional) - Limit returned results by year +-1
    + limit: 10 (int, optional) - Limit returned results
    + apikey: abc123 (string, required) - Your API Key

### Get Search Results [GET]

+ Response 200 (application/json)
        
            {
              "search": [
                {
                  "title": "Jaws",
                  "year": 1975,
                  "score": 86,
                  "score_average": 86,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0073195",
                    "tmdbid": 578,
                    "traktid": 457,
                    "anidbid": null,
                    "tvdbid": null
                  }
                },
                {
                  "title": "Jaws 2",
                  "year": 1978,
                  "score": 55,
                  "score_average": 55,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0077766",
                    "tmdbid": 579,
                    "traktid": 458,
                    "anidbid": null,
                    "tvdbid": null
                  }
                },
                {
                  "title": "The Shark Is Still Working: The Impact & Legacy of \"Jaws\"",
                  "year": 2009,
                  "score": 46,
                  "score_average": 80,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0469185",
                    "tmdbid": 106262,
                    "traktid": 75531,
                    "anidbid": null,
                    "tvdbid": null
                  }
                }
              ],
              "total": 3
            }


## Top Lists [/lists/top{?apikey}]
Lists top lists sorted by Trakt likes

+ Parameters
    + apikey: abc123 (string, required) - Your API key.

### Get Top Lists [GET]

+ Response 200 (application/json)
    + Body
                
            [
              {
                "id": 2194,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Latest TV Shows",
                "slug": "latest-tv-shows",
                "description": "",
                "mediatype": "show",
                "items": 300,
                "likes": 477
              },
              {
                "id": 14,
                "user_id": 3,
                "user_name": "linaspurinis",
                "name": "Top Watched Movies of The Week / >60",
                "slug": "top-watched-movies-of-the-week",
                "description": "",
                "mediatype": "movie",
                "items": 76,
                "likes": 247
              },
              {
                "id": 3082,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Netflix Shows",
                "slug": "netflix-shows",
                "description": "",
                "mediatype": "show",
                "items": 300,
                "likes": 201
              },
              {
                "id": 3093,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Netflix Movies",
                "slug": "netflix-movies",
                "description": "",
                "mediatype": "movie",
                "items": 200,
                "likes": 192
              },
              {
                "id": 3882,
                "user_id": 894,
                "user_name": "hdlists",
                "name": "Latest TV Shows",
                "slug": "latest-tv-shows",
                "description": "Latest TV Shows List for English Language Series/Specials",
                "mediatype": "show",
                "items": 300,
                "likes": 188
              }
            ]

## List Search [/lists/search{?apikey,query}]
Search public lists by title

+ Parameters
    + query: Horror (string, required) - Search query
    + apikey: abc123 (string, required) - Your API key.

### Search Lists [GET]

+ Response 200 (application/json)
    + Body
                
            [
              {
                "id": 2410,
                "user_id": 894,
                "user_name": "hdlists",
                "name": "Horror Movies (Top Rated From 1960 to Today)",
                "slug": "latest-hd-horror-movies-top-rated-from-1980-to-today",
                "description": "",
                "mediatype": "movie",
                "items": 920,
                "likes": 139
              },
              {
                "id": 3110,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Horror",
                "slug": "horror",
                "description": "",
                "mediatype": "movie",
                "items": 347,
                "likes": 68
              },
              {
                "id": 3124,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Horror Shows",
                "slug": "horror-shows",
                "description": "",
                "mediatype": "show",
                "items": 129,
                "likes": 53
              }
            ]

## Ratings [/rating/{media_type}/{return_rating}{?apikey,query}]
Bulk rating request. Provide list of tmdb or imdb ids with media type and returns ratings of requested type.

+ Parameters
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
    + return_rating: letterboxd (string, required) - Return rating type
        + Members
            + `trakt`
            + `imdb`
            + `tmdb`
            + `letterboxd`
            + `tomatoes`
            + `audience`
            + `metacritic`
            + `rogerebert`
            + `mal`
            + `score`
            + `score_average`
    + apikey: abc123 (string, required) - Your API key.

### Get Ratings [POST]

+ Request (application/json)

            {
                "ids": 
                    [923, 990, 545611],
                "provider": "tmdb"
            }

+ Response 200 (application/json)
    + Body
                
            {
              "provider_id": "tmdb",
              "provider_rating": "letterboxd",
              "mediatype": "movie",
              "ratings": [
                {
                  "id": 923,
                  "rating": 4
                },
                {
                  "id": 990,
                  "rating": 4.1
                },
                {
                  "id": 545611,
                  "rating": 4.3
                }
              ]
            }