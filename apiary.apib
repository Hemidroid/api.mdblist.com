FORMAT: 1A
HOST: https://api.mdblist.com

# MDBList API

API service allows you to access information about ratings, votes, streaming services and more

## API Keys

API key can be generated for free in mdblist.com preferences

## Pagination

Some methods support pagination 📄  
Append a query string like ?limit=`limit`&offset=`offset` to the URL to influence the results.

| Parameter | Type | Value |
| --------- | ---- | ----- |
| `limit` | integer  | Number of results to return |
| `offset` | integer  | Number of results to skip from the beginning  |


## My Limits [/user{?apikey}]

Show information about user limits

+ Parameters
    + apikey: abc123 (string, required) - Your API key.
    
### Get My Limits [GET]

+ Response 200 (application/json)

            {
                "api_requests": 100000,
                "api_requests_count": 276,
                "user_id": 3,
                "patron_status": "active_patron",
                "patreon_pledge": 300
            }
        
## My Lists [/lists/user{?apikey}]
Fetches users lists.

+ Parameters
    + apikey: abc123 (string, required) - Your API key.

### Get My Lists [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 13,
                    "name": "Top Watched Movies of The Week for KiDS",
                    "slug": "top-watched-movies-of-the-week-for-kids",
                    "description": "",
                    "mediatype": "movie",
                    "items": 12,
                    "likes": 50
                },
                {
                    "id": 14,
                    "name": "Top Watched Movies of The Week / >60",
                    "slug": "top-watched-movies-of-the-week",
                    "description": "",
                    "mediatype": "movie",
                    "items": 75,
                    "likes": 247
                },
                {
                    "id": 69,
                    "name": "IMDb Moviemeter (Top 100)",
                    "slug": "imdb-moviemeter-top-100",
                    "description": "",
                    "mediatype": "movie",
                    "items": 100,
                    "likes": 57
                }
            ]

## User Lists by ID [/lists/user/{userid}{?apikey}]
Fetches users lists by `userid`.

+ Parameters
    + userid: 3 (int, required) - User ID.
    + apikey: abc123 (string, required) - Your API key.

### Get User Lists [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 13,
                    "name": "Top Watched Movies of The Week for KiDS",
                    "slug": "top-watched-movies-of-the-week-for-kids",
                    "description": "",
                    "mediatype": "movie",
                    "items": 12,
                    "likes": 50
                },
                {
                    "id": 14,
                    "name": "Top Watched Movies of The Week / >60",
                    "slug": "top-watched-movies-of-the-week",
                    "description": "",
                    "mediatype": "movie",
                    "items": 75,
                    "likes": 247
                },
                {
                    "id": 69,
                    "name": "IMDb Moviemeter (Top 100)",
                    "slug": "imdb-moviemeter-top-100",
                    "description": "",
                    "mediatype": "movie",
                    "items": 100,
                    "likes": 57
                }
            ]

## User Lists by Name [/lists/user/{username}{?apikey}]
Fetches users lists by `userid`.

+ Parameters
    + username: linaspurinis (string, required) - The username
    + apikey: abc123 (string, required) - Your API key

### Get User Lists [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 13,
                    "name": "Top Watched Movies of The Week for KiDS",
                    "slug": "top-watched-movies-of-the-week-for-kids",
                    "description": "",
                    "mediatype": "movie",
                    "items": 12,
                    "likes": 50
                },
                {
                    "id": 14,
                    "name": "Top Watched Movies of The Week / >60",
                    "slug": "top-watched-movies-of-the-week",
                    "description": "",
                    "mediatype": "movie",
                    "items": 75,
                    "likes": 247
                },
                {
                    "id": 69,
                    "name": "IMDb Moviemeter (Top 100)",
                    "slug": "imdb-moviemeter-top-100",
                    "description": "",
                    "mediatype": "movie",
                    "items": 100,
                    "likes": 57
                }
            ]
            
## List by ID [/lists/{listid}{?apikey}]
Fetches information about a list by `listid`.

+ Parameters
    + listid: 1176 (number, required) - The ID of the list.
    + apikey: abc123 (string, required) - Your API key.

### Get List by ID [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 1176,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "movie",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                }
            ]

## List by Name [/lists/{username}/{listname}{?apikey}]
Fetches information about a list by `username` and `listname`. Can return multiple lists, since list can contain separate filter for movies and shows.

+ Parameters
    + username: linaspurinis (string, required) - The username associated with the list.
    + listname: `latest-certified-fresh-releases` (string, required) - The slug of the list.
    + apikey: abc123 (string, required) - Your API key.

### Get List by Name [GET]

+ Response 200 (application/json)
    + Body

            [       
                {
                    "id": 1176,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "movie",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                },
                {
                    "id": 6365,
                    "user_id": 3,
                    "user_name": "linaspurinis",
                    "name": "Latest Certified Fresh Releases",
                    "slug": "latest-certified-fresh-releases",
                    "description": "Score >= 60\r\nLimit 30",
                    "mediatype": "show",
                    "items": 30,
                    "likes": 21,
                    "dynamic": true,
                    "private": false
                }
            ]


## List items [/lists/{listid}/items{?apikey,limit,offset}]

#### 📄 Pagination

Fetches list items.

+ Parameters
    + listid: 1176 (integer, required) - The ID of the list.
    + limit: 100 (integer, optional)
    + offset: 10 (integer, optional)
    + apikey: abc123 (string, required) - Your API key.

### Get List Items [GET]

+ Response 200 (application/json)
    + Body

            {
              "movies": [
                {
                  "id": 917496,
                  "rank": 1,
                  "adult": 0,
                  "title": "Beetlejuice Beetlejuice",
                  "imdb_id": "tt2049403",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 646097,
                  "rank": 2,
                  "adult": 0,
                  "title": "Rebel Ridge",
                  "imdb_id": "tt11301886",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1125073,
                  "rank": 3,
                  "adult": 0,
                  "title": "Between the Temples",
                  "imdb_id": "tt27722375",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1029281,
                  "rank": 4,
                  "adult": 0,
                  "title": "Strange Darling",
                  "imdb_id": "tt22375054",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 840705,
                  "rank": 5,
                  "adult": 0,
                  "title": "Blink Twice",
                  "imdb_id": "tt14858658",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 945961,
                  "rank": 6,
                  "adult": 0,
                  "title": "Alien: Romulus",
                  "imdb_id": "tt18412256",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1214521,
                  "rank": 7,
                  "adult": 0,
                  "title": "Daughters",
                  "imdb_id": "tt12336480",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1158874,
                  "rank": 8,
                  "adult": 0,
                  "title": "Sugarcane",
                  "imdb_id": "tt30319854",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1122618,
                  "rank": 9,
                  "adult": 0,
                  "title": "Good One",
                  "imdb_id": "tt30319516",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                }
              ],
              "shows": []
            }

## List items by Name [/lists/{username}/{listname}/items{?apikey,limit,offset}]

#### 📄 Pagination

Fetches list items.

+ Parameters
    + username: linaspurinis (string, required) - The username associated with the list.
    + listname: `latest-certified-fresh-releases` (string, required) - The slug of the list.
    + limit: 100 (integer, optional)
    + offset: 10 (integer, optional)
    + apikey: abc123 (string, required) - Your API key.

### Get List Items [GET]

+ Response 200 (application/json)
    + Body

            {
              "movies": [
                {
                  "id": 917496,
                  "rank": 1,
                  "adult": 0,
                  "title": "Beetlejuice Beetlejuice",
                  "imdb_id": "tt2049403",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 646097,
                  "rank": 2,
                  "adult": 0,
                  "title": "Rebel Ridge",
                  "imdb_id": "tt11301886",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1125073,
                  "rank": 3,
                  "adult": 0,
                  "title": "Between the Temples",
                  "imdb_id": "tt27722375",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 1029281,
                  "rank": 4,
                  "adult": 0,
                  "title": "Strange Darling",
                  "imdb_id": "tt22375054",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 840705,
                  "rank": 5,
                  "adult": 0,
                  "title": "Blink Twice",
                  "imdb_id": "tt14858658",
                  "tvdb_id": null,
                  "language": "en",
                  "mediatype": "movie",
                  "release_year": 2024,
                  "spoken_language": "en"
                }
              ],
              "shows": [
                {
                  "id": 258902,
                  "rank": 1,
                  "adult": 0,
                  "title": "English Teacher",
                  "imdb_id": "tt20782190",
                  "tvdb_id": 421968,
                  "language": "en",
                  "mediatype": "show",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 253254,
                  "rank": 2,
                  "adult": 0,
                  "title": "Fantasmas",
                  "imdb_id": "tt18182112",
                  "tvdb_id": 450408,
                  "language": "en",
                  "mediatype": "show",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 241259,
                  "rank": 3,
                  "adult": 0,
                  "title": "Baby Reindeer",
                  "imdb_id": "tt13649112",
                  "tvdb_id": 417223,
                  "language": "en",
                  "mediatype": "show",
                  "release_year": 2024,
                  "spoken_language": "en"
                },
                {
                  "id": 126308,
                  "rank": 4,
                  "adult": 0,
                  "title": "Shōgun",
                  "imdb_id": "tt2788316",
                  "tvdb_id": 392573,
                  "language": "en",
                  "mediatype": "show",
                  "release_year": 2024,
                  "spoken_language": "ja"
                },
                {
                  "id": 155292,
                  "rank": 5,
                  "adult": 0,
                  "title": "Scott Pilgrim Takes Off",
                  "imdb_id": "tt16969708",
                  "tvdb_id": 433113,
                  "language": "en",
                  "mediatype": "show",
                  "release_year": 2023,
                  "spoken_language": "en"
                }
              ]
            }
            
            
## Media Info [/{media_provider}/{media_type}/{media_id}{?apikey,append_to_response}]

Get informtion about Movie or Show

+ Parameters
    + media_provider: `imdb` (enum[string], required) - Media provider
        + Members
            + `tmdb`
            + `imdb`
            + `trakt`
            + `tmdb`
            + `tvdb`
            + `anidb`
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
            + `any`
    + media_id: tt0073195 (string, required) - Media ID
    + append_to_response: `keyword` (string, optional) - Additional information to append. Accepts a comma-separated list of the following values: `keyword`, `review`
        + Members
            + `keyword` - Append keyword information.
            + `review` - Append review information.
    + apikey: abc123 (string, required) - Your API key.

### Get Summary [GET]

+ Response 200 (application/json)
        
            {
              "title": "Jaws",
              "year": 1975,
              "released": "1975-06-20",
              "released_digital": "1997-11-01",
              "description": "When the seaside community of Amity finds itself under attack by a dangerous great white shark, the town's chief of police, a young marine biologist, and a grizzled hunter embark on a desperate quest to destroy the beast before it strikes again.",
              "runtime": 124,
              "score": 86,
              "score_average": 86,
              "ids": {
                "imdb": "tt0073195",
                "trakt": 457,
                "tmdb": 578,
                "tvdb": null,
                "anidb": null
              },
              "type": "movie",
              "ratings": [
                {
                  "source": "imdb",
                  "value": 8.1,
                  "score": 81,
                  "votes": 673852,
                  "url": 99
                },
                {
                  "source": "metacritic",
                  "value": 87,
                  "score": 87,
                  "votes": 21,
                  "url": "/jaws"
                },
                {
                  "source": "metacriticuser",
                  "value": null,
                  "score": null,
                  "votes": null,
                  "url": null
                },
                {
                  "source": "trakt",
                  "value": 78,
                  "score": 78,
                  "votes": 14033,
                  "url": null
                },
                {
                  "source": "tomatoes",
                  "value": 97,
                  "score": 97,
                  "votes": 102,
                  "url": "/m/jaws"
                },
                {
                  "source": "tmdb",
                  "value": 76,
                  "score": 76,
                  "votes": 10114,
                  "url": null
                },
                {
                  "source": "letterboxd",
                  "value": 8,
                  "score": 80,
                  "votes": 876082,
                  "url": "/film/jaws/"
                },
                {
                  "source": "rogerebert",
                  "value": 4,
                  "score": null,
                  "votes": null,
                  "url": "great-movie-jaws-1975"
                },
                {
                  "source": "myanimelist",
                  "value": null,
                  "score": null,
                  "votes": null,
                  "url": null
                }
              ],
              "streams": [
                {
                  "id": 9,
                  "name": "fuboTV"
                },
                {
                  "id": 10,
                  "name": "AMC"
                }
              ],
              "watch_providers": [
                {
                  "id": 8,
                  "name": "Netflix"
                },
                {
                  "id": 1796,
                  "name": "Netflix basic with Ads"
                }
              ],
              "language": "en",
              "spoken_language": "en",
              "country": "us",
              "certification": "PG",
              "commonsense": true,
              "age_rating": 13,
              "status": "released",
              "trailer": "https://youtube.com/watch?v=WKuZJjPSLXQ",
              "poster": "https://image.tmdb.org/t/p/original/lxM6kqilAdpdhqUl2biYp5frUxE.jpg",
              "backdrop": "https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/3nYlM34QhzdtAvWRV5bN4nLtnTc.jpg"
            }


## Media Info List [/{media_provider}/{media_type}{?apikey}]

You can modify static list by adding or removing items

+ Parameters
    + media_provider: `imdb` (enum[string], required) - Media provider
        + Members
            + `tmdb`
            + `imdb`
            + `trakt`
            + `tmdb`
            + `tvdb`
            + `anidb`
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
            + `any`
    + apikey: abc123 (string, required) - Your API key.


### Get Media Info List [POST]

+ Request (application/json)

            {
                "ids": ["116006", "125198"],
                "append_to_response": ["review", "keyword"]
            }

+ Response 200 (application/json)
    + Body
    
            [
              {
                "id": 128773,
                "title": "The Phantom of the Convent",
                "year": 1934,
                "released": "1934-06-26",
                "description": "Alfonso, Eduardo and Cristina get lost when visiting a forest. A strange monk finds them and takes them to an ancient convent. There, the three amigos suffer personality changes, specially Cristina who tries to seduce Alfonso in a strange coincidence to a story told by an old monk. After some efforts to escape, Alfonso is trapped inside a jail and more strange and macabre situations happen.",
                "runtime": 85,
                "score": 31,
                "score_average": 64,
                "ids": {
                  "imdb": "tt0025100",
                  "trakt": 116006,
                  "tmdb": 184940,
                  "tvdb": null,
                  "anidb": null
                },
                "type": "movie",
                "ratings": [],
                "streams": [],
                "watch_providers": [
                  {
                    "id": 258,
                    "name": "Criterion Channel"
                  }
                ],
                "language": "es",
                "spoken_language": "es",
                "country": "mx",
                "certification": "NR",
                "commonsense": null,
                "age_rating": 11,
                "status": "released",
                "trailer": null,
                "poster": "https://image.tmdb.org/t/p/original/gi5MqHPQEkekaqNZ5PqMFZ70cdf.jpg",
                "backdrop": "https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/2peiLehxIXlk36KAtWfl2v53Soc.jpg",
                "reviews": [
                  {
                    "updated_at": "2024-04-01",
                    "author": "NealZ",
                    "rating": 7,
                    "provider_id": 1,
                    "content": "This officially marks the oldest movie I've ever watched, and I must say, I'm pleasantly surprised by how much I enjoyed it. Initially seeming rather straightforward, it ended up delivering more surprises than I had imagined. I relished the overall atmosphere; it even boasted some impressive practical effects and had its moments of delightful silliness. Though it didn't quite muster the scares by today's standards, I found it to be a far more engaging experience than many contemporary releases. It leaves me hopeful for exploring other films from that era, or even earlier ones."
                  }
                ],
                "keywords": [
                  {
                    "id": 96,
                    "name": "monk"
                  },
                  {
                    "id": 6325,
                    "name": "convent-nunnery"
                  },
                  {
                    "id": 51341,
                    "name": "mexican-horror"
                  },
                  {
                    "id": 80325,
                    "name": "lost-in-woods"
                  }
                  }
                ]
              },
              {
                "id": 2401479,
                "title": "One Mile From Heaven",
                "year": 1937,
                "released": "1937-08-18",
                "description": "A female journalist travels to a new neighborhood after getting a (false) lead and is surprised by what she finds.",
                "runtime": 67,
                "score": 0,
                "score_average": 70,
                "ids": {
                  "imdb": "tt0029349",
                  "trakt": 125198,
                  "tmdb": 200717,
                  "tvdb": null,
                  "anidb": null
                },
                "type": "movie",
                "ratings": [],
                "streams": [],
                "watch_providers": [],
                "language": "en",
                "spoken_language": "en",
                "country": "us",
                "certification": "NR",
                "commonsense": null,
                "age_rating": null,
                "status": "released",
                "trailer": null,
                "poster": "https://image.tmdb.org/t/p/original/4zOeRUZqvqLSYdATrqg97qT5o0l.jpg",
                "backdrop": "https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/qH2F24GxmUVsgwHvv39iVy3YSq1.jpg",
                "reviews": [
                  {
                    "updated_at": "2021-02-02",
                    "author": "Louis Lautier",
                    "rating": 1,
                    "provider_id": 3,
                    "content": "Bill Robinson and Fredi Washington give performances deserving commendation."
                  }
                ],
                "keywords": [
                  {
                    "id": 1305,
                    "name": "mother"
                  },
                  {
                    "id": 1594,
                    "name": "wealth"
                  },
                  {
                    "id": 12453,
                    "name": "welfare"
                  },
                  {
                    "id": 304495,
                    "name": "welfare"
                  }
                ]
              }
            ]
            
## Search for Media [/search/{media_type}{?apikey,query,limit_by_score,sort_by_score,year,limit}]

Search for Movie or Show

+ Parameters
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
            + `any`
    + query: Jaws (string, required) - Search Query
    + limit_by_score: 30 (int, optional) - Limit returned results by score
    + sort_by_score: True (Boolean, optional) - Sort returned results by score
    + year: 1976 (int, optional) - Limit returned results by year +-1
    + limit: 10 (int, optional) - Limit returned results
    + apikey: abc123 (string, required) - Your API Key

### Get Search Results [GET]

+ Response 200 (application/json)
        
            {
              "search": [
                {
                  "title": "Jaws",
                  "year": 1975,
                  "score": 86,
                  "score_average": 86,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0073195",
                    "tmdbid": 578,
                    "traktid": 457,
                    "anidbid": null,
                    "tvdbid": null
                  }
                },
                {
                  "title": "Jaws 2",
                  "year": 1978,
                  "score": 55,
                  "score_average": 55,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0077766",
                    "tmdbid": 579,
                    "traktid": 458,
                    "anidbid": null,
                    "tvdbid": null
                  }
                },
                {
                  "title": "The Shark Is Still Working: The Impact & Legacy of \"Jaws\"",
                  "year": 2009,
                  "score": 46,
                  "score_average": 80,
                  "type": "movie",
                  "ids": {
                    "imdbid": "tt0469185",
                    "tmdbid": 106262,
                    "traktid": 75531,
                    "anidbid": null,
                    "tvdbid": null
                  }
                }
              ],
              "total": 3
            }


## Top Lists [/lists/top{?apikey}]
Lists top lists sorted by Trakt likes

+ Parameters
    + apikey: abc123 (string, required) - Your API key.

### Get Top Lists [GET]

+ Response 200 (application/json)
    + Body
                
            [
              {
                "id": 2194,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Latest TV Shows",
                "slug": "latest-tv-shows",
                "description": "",
                "mediatype": "show",
                "items": 300,
                "likes": 477
              },
              {
                "id": 14,
                "user_id": 3,
                "user_name": "linaspurinis",
                "name": "Top Watched Movies of The Week / >60",
                "slug": "top-watched-movies-of-the-week",
                "description": "",
                "mediatype": "movie",
                "items": 76,
                "likes": 247
              },
              {
                "id": 3082,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Netflix Shows",
                "slug": "netflix-shows",
                "description": "",
                "mediatype": "show",
                "items": 300,
                "likes": 201
              },
              {
                "id": 3093,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Netflix Movies",
                "slug": "netflix-movies",
                "description": "",
                "mediatype": "movie",
                "items": 200,
                "likes": 192
              },
              {
                "id": 3882,
                "user_id": 894,
                "user_name": "hdlists",
                "name": "Latest TV Shows",
                "slug": "latest-tv-shows",
                "description": "Latest TV Shows List for English Language Series/Specials",
                "mediatype": "show",
                "items": 300,
                "likes": 188
              }
            ]

## List Search [/lists/search{?apikey,query}]
Search public lists by title

+ Parameters
    + query: Horror (string, required) - Search query
    + apikey: abc123 (string, required) - Your API key.

### Search Lists [GET]

+ Response 200 (application/json)
    + Body
                
            [
              {
                "id": 2410,
                "user_id": 894,
                "user_name": "hdlists",
                "name": "Horror Movies (Top Rated From 1960 to Today)",
                "slug": "latest-hd-horror-movies-top-rated-from-1980-to-today",
                "description": "",
                "mediatype": "movie",
                "items": 920,
                "likes": 139
              },
              {
                "id": 3110,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Horror",
                "slug": "horror",
                "description": "",
                "mediatype": "movie",
                "items": 347,
                "likes": 68
              },
              {
                "id": 3124,
                "user_id": 1230,
                "user_name": "garycrawfordgc",
                "name": "Horror Shows",
                "slug": "horror-shows",
                "description": "",
                "mediatype": "show",
                "items": 129,
                "likes": 53
              }
            ]

## Ratings [/rating/{media_type}/{return_rating}{?apikey,query}]
Bulk rating request. Provide list of tmdb or imdb ids with media type and returns ratings of requested type.

+ Parameters
    + media_type: movie (string, required)
        + Members
            + `movie`
            + `show`
    + return_rating: letterboxd (string, required) - Return rating type
        + Members
            + `trakt`
            + `imdb`
            + `tmdb`
            + `letterboxd`
            + `tomatoes`
            + `audience`
            + `metacritic`
            + `rogerebert`
            + `mal`
            + `score`
            + `score_average`
    + apikey: abc123 (string, required) - Your API key.

### Get Ratings [POST]

+ Request (application/json)

            {
                "ids": 
                    [923, 990, 545611],
                "provider": "tmdb"
            }

+ Response 200 (application/json)

    + Body
                
            {
              "provider_id": "tmdb",
              "provider_rating": "letterboxd",
              "mediatype": "movie",
              "ratings": [
                {
                  "id": 923,
                  "rating": 4
                },
                {
                  "id": 990,
                  "rating": 4.1
                },
                {
                  "id": 545611,
                  "rating": 4.3
                }
              ]
            }



## Modify Static List [/lists/{listid}/items/{action}{?apikey}]

#### 🔥 Supporters only
You can modify static list by adding or removing items

+ Parameters
    + listid: 49088 (number, required) - The ID of your static list
    + action: add (string, required)
        + Members
            + `add`
            + `remove`
    + apikey: abc123 (string, required) - Your API key.

### Modify List [POST]

+ Request (application/json)

            {
             "movies": [
                {
                 "tmdb": 630,
                 "imdb": "tt0032138"
                },
                {
                 "tmdb": 238
                }     
             ],
             "shows": [
                {
                 "imdb": "tt0417299"
                },
                {
                 "tmdb": 1396
                }
               ]
            }

+ Response 200 (application/json)
    + Body
    
            {
              "added": {
                "movies": 2,
                "shows": 2
              },
              "existing": {
                "movies": 0,
                "shows": 0
              },
              "not_found": {
                "movies": 0,
                "shows": 0
              }
            }